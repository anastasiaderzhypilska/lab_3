class BinaryTree:
    def __init__(self, value: int):
        self.value = value
        self.left = None
        self.right = None

def invert_binary_tree(tree) -> BinaryTree:
    if tree is None:
        return None
    
    tree.left, tree.right = tree.right, tree.left
    
    invert_binary_tree(tree.left)
    invert_binary_tree(tree.right)
    
    return tree

def print_tree_vertical(node, prefix="", is_left=True):
    if node is None:
        return
    
    print_tree_vertical(node.right, prefix + ("│   " if is_left else "    "), False)

    print(prefix + ("└── " if is_left else "┌── ") + str(node.value))

    print_tree_vertical(node.left, prefix + ("    " if is_left else "│   "), True)

if __name__ == "__main__":
    root = BinaryTree(1)
    root.left = BinaryTree(2)
    root.right = BinaryTree(3)
    root.left.left = BinaryTree(4)
    root.left.right = BinaryTree(5)
    root.right.left = BinaryTree(6)
    root.right.right = BinaryTree(7)

    print("Початкове дерево:")
    print_tree_vertical(root)

    invert_binary_tree(root)

    print("\nІнвертоване дерево:")
    print_tree_vertical(root)

