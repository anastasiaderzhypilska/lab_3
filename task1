class BinaryTree:
    def __init__(self, value: int):
        self.value = value
        self.left = None
        self.right = None

def invert_binary_tree(tree) -> BinaryTree:
    if tree is None:
        return None
    
    temp = tree.left
    tree.left = tree.right
    tree.right = temp
    
    invert_binary_tree(tree.left)
    invert_binary_tree(tree.right)
    
    return tree

def print_tree_by_levels(root):
    if root is None:
        print("Дерево порожнє")
        return
    
    queue = [root]
    while len(queue) > 0:
        current = queue[0]
        queue = queue[1:]
        
        print(current.value, end=' ')
        
        if current.left is not None:
            queue.append(current.left)
        if current.right is not None:
            queue.append(current.right)
    
    print()

if __name__ == "__main__":
    root = BinaryTree(1)
    root.left = BinaryTree(2)
    root.right = BinaryTree(3)
    root.left.left = BinaryTree(4)
    root.left.right = BinaryTree(5)
    root.right.left = BinaryTree(6)
    root.right.right = BinaryTree(7)

    print("Початкове дерево по рівнях:")
    print_tree_by_levels(root)

    invert_binary_tree(root)

    print("Інвертоване дерево по рівнях:")
    print_tree_by_levels(root)
