class BinaryTree:
    def __init__(self, value: int):
        self.value = value
        self.left = None
        self.right = None

def invert_binary_tree(tree) -> BinaryTree:
    if tree is None:
        return None
    
    temp = tree.left
    tree.left = tree.right
    tree.right = temp
    
    invert_binary_tree(tree.left)
    invert_binary_tree(tree.right)
    
    return tree

def print_tree(root, level=0, prefix=""):
    if root is None:
        return
    
    print(" " * (level * 4) + prefix + str(root.value))
    
    if root.left or root.right:  
        if root.left:
            print_tree(root.left, level + 1, "L--- ")
        else:
            print(" " * ((level + 1) * 4) + "L--- None")
        
        if root.right:
            print_tree(root.right, level + 1, "R--- ")
        else:
            print(" " * ((level + 1) * 4) + "R--- None")

if __name__ == "__main__":
    root = BinaryTree(1)
    root.left = BinaryTree(2)
    root.right = BinaryTree(3)
    root.left.left = BinaryTree(4)
    root.left.right = BinaryTree(5)
    root.right.left = BinaryTree(6)
    root.right.right = BinaryTree(7)

    print("Початкове дерево:")
    print_tree(root)

    invert_binary_tree(root)

    print("\nІнвертоване дерево:")
    print_tree(root)

